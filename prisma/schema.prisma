// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// npx prisma generate
// npx prisma db push
// npx prisma db push --force-reset   (use this instead if the the table has data)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id                 String   @id @default(uuid())
  employeeNumber     String
  lastName           String
  firstName          String
  middleName         String
  position           String
  department         String
  gender             String
  dateOfBirth        DateTime
  age                Int
  contactNumber      String
  address            String
  dateHired          DateTime
  sss                String
  tin                String
  pagibig            String
  philhealth         String
  isSSSMember        Boolean  @default(true)
  isPhilhealthMember Boolean  @default(true)
  isPagibigMember    Boolean  @default(true)
  status             String
}

model SSSContributionMatrix {
  id             String   @id @default(uuid())
  minSalary      Float
  maxSalary      Float
  employeeShare  Float
  employerShare  Float
  total          Float
  effectivityDate DateTime
  remarks        String?
  createdAt      DateTime @default(now())
}

model PhilhealthContributionMatrix {
  id              String   @id @default(uuid())
  minSalary       Float    // lowest salary in the bracket
  maxSalary       Float    // highest salary in the bracket
  salaryBase      Float    // official salary base used for calculation (if applicable)
  employeeShare   Float    // employee's share (fixed or computed)
  employerShare   Float    // employer's share
  effectivityDate DateTime
  remarks         String?
  createdAt       DateTime @default(now())
}

model PagibigRateConfig  {
  id              String   @id @default(uuid())
  rateType        String   // 'PERCENT' or 'FIXED'
  employeeRate    Float    // e.g. 2.0 means 2%
  employerRate    Float    // e.g. 2.0 means 2%
  rateCap         Float    // e.g. 5000 = maximum salary base for rate
  effectivityDate DateTime
  remarks         String?
  createdAt       DateTime @default(now())
}

model TaxMatrix {
  id              String   @id @default(uuid())
  minSalary       Float
  maxSalary       Float
  baseTax         Float
  percentOver     Float
  effectivityDate DateTime
  remarks         String?
  createdAt       DateTime @default(now())
}

model EmployeeLoan {
  id           String   @id @default(uuid())
  employeeId   String
  loanType     String
  amountGranted Float
  balance      Float
  monthlyAmort Float
  startDeduction DateTime
  endDeduction   DateTime?
  isActive     Boolean  @default(true)
  remarks      String?
  createdAt    DateTime @default(now())
}
